[build-system]
requires = ["setuptools>=45", "wheel"]
build-backend = "setuptools.build_meta"

[project]
name = "lxc-autoscaler"
version = "1.0.0"
description = "Production-ready LXC container autoscaler for Proxmox VE"
readme = "README.md"
requires-python = ">=3.8"
license = {text = "MIT"}
authors = [
    {name = "Oliver H", email = "support@example.com"},
]
keywords = ["proxmox", "lxc", "autoscaler", "containers", "virtualization", "monitoring"]
classifiers = [
    "Development Status :: 4 - Beta",
    "Intended Audience :: System Administrators",
    "License :: OSI Approved :: MIT License",
    "Operating System :: POSIX :: Linux",
    "Programming Language :: Python :: 3",
    "Programming Language :: Python :: 3.8",
    "Programming Language :: Python :: 3.9",
    "Programming Language :: Python :: 3.10",
    "Programming Language :: Python :: 3.11",
    "Programming Language :: Python :: 3.12",
    "Topic :: System :: Systems Administration",
    "Topic :: System :: Monitoring",
    "Environment :: No Input/Output (Daemon)",
]
dependencies = [
    "proxmoxer>=2.0.1",
    "aiohttp>=3.8.0",
    "PyYAML>=6.0",
    "aiofiles>=23.0.0",
]

[project.optional-dependencies]
dev = [
    "mypy>=1.0.0",
    "types-PyYAML>=6.0.0", 
    "ruff>=0.1.0",
    "black>=23.0.0",
]
test = [
    "pytest>=7.0.0",
    "pytest-asyncio>=0.21.0",
    "pytest-cov>=4.0.0",
]
docs = [
    "sphinx>=5.0.0",
    "sphinx-rtd-theme>=1.0.0",
]

[project.scripts]
lxc-autoscaler = "lxc_autoscaler.core.daemon:main"

[project.urls]
Homepage = "https://github.com/MatrixMagician/lxc-autoscaler"
Repository = "https://github.com/MatrixMagician/lxc-autoscaler"
Documentation = "https://lxc-autoscaler.readthedocs.io/"
"Bug Tracker" = "https://github.com/MatrixMagician/lxc-autoscaler/issues"

[tool.setuptools.packages.find]
where = ["."]
include = ["lxc_autoscaler*"]

[tool.setuptools.package-data]
lxc_autoscaler = ["*.yaml", "*.yml", "*.conf", "config/*.yaml", "config/*.yml"]

[tool.ruff]
line-length = 88
target-version = "py38"
extend-exclude = [
    ".git",
    "__pycache__",
    "build",
    "dist",
    ".venv",
    "venv",
]

[tool.ruff.lint]
select = [
    "E",  # pycodestyle errors
    "W",  # pycodestyle warnings
    "F",  # pyflakes
    "I",  # isort
    "B",  # flake8-bugbear
    "C4", # flake8-comprehensions
    "UP", # pyupgrade
    "N",  # pep8-naming
]
ignore = [
    "E501", # line too long (handled by formatter)
    "B008", # do not perform function calls in argument defaults
    "B904", # raise-without-from-inside-except
]

[tool.ruff.lint.isort]
known-first-party = ["lxc_autoscaler"]
force-single-line = true

[tool.mypy]
python_version = "3.8"
warn_return_any = true
warn_unused_configs = true
disallow_untyped_defs = true
disallow_incomplete_defs = true
check_untyped_defs = true
disallow_untyped_decorators = true
no_implicit_optional = true
warn_redundant_casts = true
warn_unused_ignores = true
warn_no_return = true
warn_unreachable = true
strict_equality = true

[[tool.mypy.overrides]]
module = [
    "proxmoxer.*",
]
ignore_missing_imports = true

[tool.pytest.ini_options]
minversion = "7.0"
addopts = "-ra -q --strict-markers --strict-config"
testpaths = ["tests"]
python_files = ["test_*.py", "*_test.py"]
python_classes = ["Test*"]
python_functions = ["test_*"]
asyncio_mode = "auto"

[tool.coverage.run]
source = ["lxc_autoscaler"]
omit = [
    "*/tests/*",
    "*/test_*",
    "setup.py",
]

[tool.coverage.report]
exclude_lines = [
    "pragma: no cover",
    "def __repr__",
    "if self.debug:",
    "if settings.DEBUG",
    "raise AssertionError",
    "raise NotImplementedError",
    "if 0:",
    "if __name__ == .__main__.:",
    "class .*\\bProtocol\\):",
    "@(abc\\.)?abstractmethod",
]

[tool.black]
line-length = 88
target-version = ['py38', 'py39', 'py310', 'py311', 'py312']
include = '\.pyi?$'
extend-exclude = '''
/(
  # directories
  \.eggs
  | \.git
  | \.hg
  | \.mypy_cache
  | \.tox
  | \.venv
  | build
  | dist
)/
'''
